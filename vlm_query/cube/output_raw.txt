```python
# The task "put the red cube on the green cube" involves two stages:
# 1. Grasp the red cube.
# 2. Place the red cube on top of the green cube.

num_stages = 2

### stage 1 sub-goal constraints
def stage1_subgoal_constraint1(end_effector, keypoints):
    """Align the end-effector with the red cube (keypoint 0)."""
    cost = np.linalg.norm(end_effector - keypoints[0])
    return cost

### stage 1 path constraints
# No path constraints are needed for the grasping stage.

### stage 2 sub-goal constraints
def stage2_subgoal_constraint1(end_effector, keypoints):
    """The red cube (keypoint 0) is 10cm above the green cube (keypoint 2)."""
    offsetted_point = keypoints[2] + np.array([0, 0, 0.1])  # 10cm above the green cube
    cost = np.linalg.norm(keypoints[0] - offsetted_point)
    return cost

### stage 2 path constraints
def stage2_path_constraint1(end_effector, keypoints):
    """The robot must still be grasping the red cube (keypoint 0)."""
    return get_grasping_cost_by_keypoint_idx(0)

# Summarize keypoints to be grasped in all grasping stages.
grasp_keypoints = [0, -1]

# Summarize at the end of which stage the robot should release the keypoints.
release_keypoints = [-1, 0]
```